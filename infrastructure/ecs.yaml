AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  VpcId:
    Type: String
  Subnet1ID:
    Type: String
  Subnet2ID:
    Type: String

Resources:
  MegaStudiosCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: megastudios-cluster
  
  MegaStudiosExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: megastudios-ecs-role
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  
  MegaStudioLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: megastudio-nginx-app
  
  MegaStudiosContainerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MegaStudiosContainerSecurityGroup
      GroupDescription: allowing access to megastudios Fargate tasks
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  MegaStudiosTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: megastudios-taskdefinition
      NetworkMode: awsvpc
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref MegaStudiosExecutionRole
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: megastudio-nginx-app
          Image: nginx:latest
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref MegaStudioLogGroup
              awslogs-stream-prefix: megastudios-logs

  MegaStudiosService:
    Type: AWS::ECS::Service
    DependsOn: MegaStudiosApplicationLoadBalancerListener
    Properties:
      ServiceName: megastudios-service
      Cluster: !Ref MegaStudiosCluster
      LaunchType: FARGATE
      DesiredCount: 1
      TaskDefinition: !Ref MegaStudiosTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref Subnet1ID
            - !Ref Subnet2ID
          SecurityGroups:
            - !GetAtt MegaStudiosContainerSG.GroupId
      LoadBalancers:
        - TargetGroupArn: !Ref MegaStudiosTargetGroup
          ContainerPort: 80
          ContainerName: megastudio-nginx-app
  
  MegaStudiosALBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: MegaStudiosALBSG
      GroupDescription: Allows access to ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  
  MegaStudiosALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MegaStudiosALB
      Subnets:
        - !Ref Subnet1ID
        - !Ref Subnet2ID
      SecurityGroups:
        - !GetAtt MegaStudiosALBSG.GroupId

  MegaStudiosApplicationLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MegaStudiosALB
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MegaStudiosTargetGroup

  MegaStudiosTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: ip
      Name: MegaStudiosTG
      Protocol: HTTP
      Port: 80
      VpcId: !Ref VpcId